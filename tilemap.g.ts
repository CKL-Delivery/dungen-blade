// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . 2 . . 2 . . . . . . . . . 
. . . 2 . . 2 . . . . . . . . . 
. . . 2 . . 2 . . . . . . . . . 
. . . 2 . . 2 . . . . . . . . . 
. . . 2 . . 2 . . . . . . . . . 
. . . 2 . . 2 . . . . . . . . . 
. . . 2 . . 2 2 2 2 2 2 2 2 2 2 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tileDarkGrass1,sprites.builtin.forestTiles4,sprites.builtin.forestTiles1,sprites.builtin.forestTiles2,sprites.builtin.forestTiles3,sprites.castle.tileDarkGrass3,sprites.castle.tileDarkGrass2,myTiles.tile2,myTiles.tile1], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . 2 . 2 2 2 2 2 
. 2 2 2 2 2 2 2 . 2 . 2 . . . 2 
. 2 2 2 2 2 2 2 . 2 . 2 . 2 2 2 
. 2 2 2 2 2 2 2 . 2 . 2 . 2 2 2 
. . . . . . 2 2 . 2 . 2 . 2 2 2 
2 2 2 2 2 . 2 2 2 2 . 2 . . . . 
. . . . . . . . 2 . . 2 . 2 2 . 
. 2 . 2 2 2 2 . 2 . . 2 . . 2 . 
. 2 . 2 2 2 2 . 2 2 . 2 . . 2 . 
. 2 . 2 2 2 2 . . . . 2 2 2 2 . 
2 2 . 2 2 2 2 2 2 . 2 2 . 2 2 . 
. . . . . . . . 2 . 2 . . 2 2 . 
2 2 2 2 2 2 2 . 2 . . . . 2 2 . 
2 2 2 2 2 2 2 . 2 . 2 2 2 2 2 . 
2 2 2 2 2 2 2 . 2 . 2 2 2 2 2 . 
2 2 2 2 2 2 2 . 2 . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.dungeon.collectibleInsignia,myTiles.tile4,sprites.dungeon.floorLight0], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . 2 . 2 2 2 2 2 
. 2 2 2 2 2 2 2 . 2 . 2 . . . 2 
. 2 2 2 2 2 2 2 . 2 . 2 . 2 2 2 
. 2 2 2 2 2 2 2 . 2 . 2 . 2 2 2 
. . . . . . 2 2 . 2 . 2 . 2 2 2 
2 2 2 2 2 . 2 2 2 2 . 2 . . . . 
. . . . . . . . 2 . . 2 . 2 2 . 
. 2 . 2 2 2 2 . 2 . . 2 . . 2 . 
. 2 . 2 2 2 2 . 2 2 . 2 . . 2 . 
. 2 . 2 2 2 2 . . . . 2 2 2 2 . 
2 2 . 2 2 2 2 2 2 . 2 2 . 2 2 . 
. . . . . . . . 2 . 2 . . 2 2 . 
2 2 2 2 2 2 2 . 2 . . . . 2 2 . 
2 2 2 2 2 2 2 . 2 . 2 2 2 2 2 . 
2 2 2 2 2 2 2 . 2 . 2 2 2 2 2 . 
2 2 2 2 2 2 2 . 2 . . . . . . . 
`, [myTiles.transparency16,myTiles.tile4,sprites.dungeon.darkGroundCenter,sprites.dungeon.collectibleInsignia], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile":
            case "tile1":return tile1;
            case "myTile2":
            case "tile4":return tile4;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
